<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
        
<mapper namespace="com.ddgold.dao.OrderDao">
	<resultMap id="orderMap" type="com.ddgold.vo.OrderVO">
	    <id property="orderSeq" column="ORDER_SEQ"/>
	    <result property="salesSeq" column="SALES_SEQ"/>
	    <result property="salesDt" column="SALES_DT"/>
	    <result property="prdPrice" column="PRD_PRICE"/>
	    <result property="salePrice" column="SALE_PRICE"/>
	    <result property="paymentCardDtl" column="PAYMENT_CARD_DTL"/>
	    <result property="paymentTransferDtl" column="PAYMENT_TRANSFER_DTL"/>
	    <result property="paymentCashDtl" column="PAYMENT_CASH_DTL"/>
	    <result property="paymentGoldDtl" column="PAYMENT_GOLD_DTL"/>
	    <result property="paymentGoodsDtl" column="PAYMENT_GOODS_DTL"/>
	    <result property="description" column="DESCRIPTION"/>
	    <association property="remain" column="salesSeq" javaType="com.ddgold.vo.RemainVO">
	    	<id property="remainSeq" column="remain_seq"/>
	    	<result property="salesSeq" column="remain_target_seq"/>
	    	<result property="salesDt" column="remain_target_dt"/>
	    	<result property="remainAmt" column="remain_amt"/>
	    	<result property="remainSalesSeq" column="remain_sales_seq"/>
	    	<result property="remainSalesDt" column="remain_sales_dt"/>
	    	<result property="remainPaymentAmt" column="remain_payment_amt"/>
	    	<result property="description" column="description"/>
	    </association>
	    <collection property="orderDtlList" ofType="com.ddgold.vo.OrderDtlVO">
	    	<id property="orderDtlSeq" column="ORDER_DTL_SEQ"/>
	    	<result property="orderSeq" column="ORDER_SEQ"/>
	    	<result property="salesDtlSeq" column="SALES_DTL_SEQ"/>
			<result property="salesSeq"	column="SALES_SEQ"/>
			<result property="salesType"	column="SALES_TYPE"/>
			<result property="salesTypeStr"	column="SALES_TYPE_STR"/>
			<result property="prdType"	column="PRD_TYPE"/>
			<result property="prdTypeStr"	column="PRD_TYPE_STR"/>
			<result property="karatage"	column="KARATAGE"/>
			<result property="karatageStr"	column="KARATAGE_STR"/>
			<result property="buyingPrice"	column="BUYING_PRICE"/>
			<result property="weight"	column="WEIGHT"/>
			<result property="laborCost"	column="labor_cost"/>
			<result property="dtlPrdPrice"	column="DTL_PRD_PRICE"/>
			<result property="dtlSalePrice"	column="DTL_SALE_PRICE"/>
	    </collection>
	</resultMap>
	

	<select id="selectOrderList" parameterType="com.ddgold.vo.SalesParamVO" resultMap="orderMap">
		select 
			o.order_seq,
			o.name,
			o.mobile,
			od.order_dtl_seq,
			od.receipt_date,
			od.finish_date,
			od.finish_status,
			od.addr,
			m.sales_seq,
			m.sales_dt,
			m.prd_price,
			m.sale_price,
			m.payment_card_dtl,
			m.payment_transfer_dtl,
			m.payment_cash_dtl,
			m.payment_gold_dtl,
			m.payment_goods_dtl,
			m.description,
			d.sales_dtl_seq,
			d.sales_type,
			(select code_desc from code_dtl where code_grp='sales_type' and code_val=sales_type) sales_type_str,
			d.prd_type,
			(select code_desc from code_dtl where code_grp='prd_type' and code_val=prd_type) prd_type_str,
			d.karatage,
			(select code_desc from code_dtl where code_grp='karatage' and code_val=karatage) karatage_str,
			d.buying_price,
			d.weight,
			d.labor_cost,
			d.prd_price as dtl_prd_price,
			d.sale_price as dtl_sale_price,
			r.remain_seq,
			r.sales_seq as remain_target_seq,
			(select sales_dt from sales_mst mm where mm.sales_seq = r.sales_seq) as remain_target_dt,
			r.remain_amt,
			r.remain_sales_seq,
			r.remain_sales_dt,
			r.remain_payment_amt
		from order_mst o
		    left outer join on order_dtl od on o.order_seq = od.order_seq
		    inner join sales_mst m on o.sales_seq = m.sales_seq
			left outer join sales_dtl d on m.sales_seq = d.sales_seq
			left outer join remain_payment r on (m.sales_seq = r.sales_seq or m.sales_seq = r.remain_sales_seq)
		<where>
			1=1
			<if test="month != null and month != ''">
				and m.sales_dt like concat(#{year}, '-', #{month}, '%')
			</if>
			<if test="salesType != null and salesType != ''">
				and d.sales_type = #{salesType}
			</if>
			<if test="prdType != null and prdType != ''">
				and d.prd_type = #{prdType}
			</if>
			<if test="karatage != null and karatage != ''">
				and d.karatage = #{karatage}
			</if>
		</where>
		<choose>
			<when test="ordDirection == 'desc'">
			order by m.sales_dt desc, m.sales_seq desc
			</when>
			<otherwise>
			order by m.sales_dt, m.sales_seq
			</otherwise>
		</choose>
	
	</select>
	
	<select id="selectOrder" parameterType="integer" resultMap="orderMap">
		select 
			o.order_seq,
			o.name,
			o.mobile,
			od.order_dtl_seq,
			od.receipt_date,
			od.finish_date,
			od.finish_status,
			od.addr,
			m.sales_seq,
			m.sales_dt,
			m.prd_price,
			m.sale_price,
			m.payment_card_dtl,
			m.payment_transfer_dtl,
			m.payment_cash_dtl,
			m.payment_gold_dtl,
			m.payment_goods_dtl,
			m.description,
			d.sales_dtl_seq,
			d.sales_type,
			(select code_desc from code_dtl where code_grp='sales_type' and code_val=sales_type) sales_type_str,
			d.prd_type,
			(select code_desc from code_dtl where code_grp='prd_type' and code_val=prd_type) prd_type_str,
			d.karatage,
			(select code_desc from code_dtl where code_grp='karatage' and code_val=karatage) karatage_str,
			d.buying_price,
			d.weight,
			d.labor_cost,
			d.prd_price as dtl_prd_price,
			d.sale_price as dtl_sale_price,
			r.remain_seq,
			r.sales_seq as remain_target_seq,
			(select sales_dt from sales_mst mm where mm.sales_seq = r.sales_seq) as remain_target_dt,
			r.remain_amt,
			r.remain_sales_seq,
			r.remain_sales_dt,
			r.remain_payment_amt
		from order_mst o
		    left outer join on order_dtl od on o.order_seq = od.order_seq
		    inner join sales_mst m on o.sales_seq = m.sales_seq
			left outer join sales_dtl d on m.sales_seq = d.sales_seq
			left outer join remain_payment r on (m.sales_seq = r.sales_seq or m.sales_seq = r.remain_sales_seq)
		where order_seq = #{orderSeq}
	</select>
	
	<insert id="insertOrder" parameterType="com.ddgold.vo.OrderVO">
	</insert>
</mapper>